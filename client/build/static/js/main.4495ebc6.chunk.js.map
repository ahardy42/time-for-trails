{"version":3,"sources":["context/ChoicesContext.js","components/CardGroup.js","components/NavBar.js","components/LocateControl.js","components/MapComponent.js","utils/API.js","containers/MapWrapper.js","components/Footer.js","pages/MapPage.js","components/Form.js","containers/FormWrapper.js","pages/EntryPage.js","pages/NoPage.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["ChoicesContext","createContext","choices","setChoices","useStyles","makeStyles","GridList","justifyContent","Tile","display","alignContent","TileCard","Typography","alignItems","padding","selectIcon","type","DriveEtaTwoTone","fontSize","htmlColor","DirectionsBikeTwoTone","DirectionsWalkTwoTone","DirectionsRunTwoTone","CardGroup","mode","timeLimit","travelType","classes","cellHeight","className","cols","style","marginBottom","GridListTile","Card","elevation","variant","root","flexDirection","flexGrow","height","appBar","margin","NavBar","history","AppBar","position","location","pathname","displayText","Hidden","mdDown","Consumer","renderCardGroup","LocateControl","props","map","leaflet","options","L","control","locate","addTo","MapControl","withLeaflet","Overlay","LayersControl","BaseLayer","Paper","width","Fab","left","bottom","zIndex","marginLeft","MapComponent","trailsInfo","useContext","Grid","container","justify","Map","id","center","zoom","bounds","checked","name","TileLayer","attribution","url","Polygon","positions","polygon","LayerGroup","trails","trail","index","Marker","key","latitude","longitude","imgSmall","summary","Popup","autoPan","src","alt","href","target","renderPopup","follow","setView","keepCurrentZoomLevel","color","onClick","event","Home","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getTrails","travelMode","timeLimitation","a","fetch","lat","lng","response","json","getPosition","locationObject","getTimeLimit","time","MapWrapper","componentDidMount","API","coords","realTime","getBounds","setState","state","this","React","Component","appBarFooter","Footer","Link","MapPage","push","textAlign","text","info","lineHeight","TextField","formControl","button","maxWidth","Form","handleChange","handleSubmit","isDisabled","Container","FormControl","component","FormLabel","RadioGroup","radioGroup","aria-label","value","onChange","FormControlLabel","Radio","label","InputLabel","htmlFor","Select","inputProps","error","InputLabelProps","shrink","Button","disabled","FormWrapper","prevState","parseInt","returnDisabled","preventDefault","console","log","render","errorMessage","EntryPage","marginTop","Link1","forwardRef","ref","to","RouteComponent","setLocation","Provider","exact","path","NoPage","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAOeA,EALQC,wBAAc,CACjCC,QAAS,GACTC,WAAY,e,kGCYVC,EAAYC,YAAW,CACzBC,SAAU,CACNC,eAAgB,iBAEpBC,KAAM,CACFC,QAAS,OACTC,aAAc,SACdH,eAAgB,UAEpBI,SAAU,GAGVC,WAAY,CACRH,QAAS,OACTF,eAAgB,SAChBM,WAAY,SACZC,QAAS,WAIXC,EAAa,SAAAC,GACf,OAAQA,GACJ,IAAK,QACD,OAAO,kBAACC,EAAA,EAAD,CAAiBC,SAAS,QAAQC,UAAU,UACvD,IAAK,OACD,OAAO,kBAACC,EAAA,EAAD,CAAuBF,SAAS,QAAQC,UAAU,UAC7D,IAAK,OAEL,IAAK,OACD,OAAO,kBAACE,EAAA,EAAD,CAAuBH,SAAS,QAAQC,UAAU,UAC7D,IAAK,MACD,OAAO,kBAACG,EAAA,EAAD,CAAsBJ,SAAS,QAAQC,UAAU,UAC5D,QACI,OAAO,OA4BJI,EAxBG,SAAC,GAAe,IAAdrB,EAAa,EAAbA,QACXsB,EAA+BtB,EAA/BsB,KAAMC,EAAyBvB,EAAzBuB,UAAWC,EAAcxB,EAAdwB,WAClBC,EAAUvB,IACd,OACI,kBAACE,EAAA,EAAD,CAAUsB,WAAW,OAAOC,UAAWF,EAAQrB,SAAUwB,KAAM,EAAGC,MAAO,CAACC,aAAc,QACpF,kBAACC,EAAA,EAAD,CAAcH,KAAM,EAAGD,UAAWF,EAAQnB,MACtC,kBAAC0B,EAAA,EAAD,CAAMC,UAAW,EAAGN,UAAWF,EAAQhB,UACnC,kBAACC,EAAA,EAAD,CAAYwB,QAAQ,KAAKP,UAAWF,EAAQf,YAA5C,kBAAwEG,EAAWW,MAG3F,kBAACO,EAAA,EAAD,CAAcH,KAAM,EAAGD,UAAWF,EAAQnB,MACtC,kBAAC0B,EAAA,EAAD,CAAMC,UAAW,EAAGN,UAAWF,EAAQhB,UACnC,kBAACC,EAAA,EAAD,CAAYwB,QAAQ,KAAKP,UAAWF,EAAQf,YAA5C,eAAqEa,EAArE,cAGR,kBAACQ,EAAA,EAAD,CAAcH,KAAM,EAAGD,UAAWF,EAAQnB,MACtC,kBAAC0B,EAAA,EAAD,CAAMC,UAAW,EAAGN,UAAWF,EAAQhB,UACnC,kBAACC,EAAA,EAAD,CAAYwB,QAAQ,KAAKP,UAAWF,EAAQf,YAA5C,eAAqEG,EAAWS,QC1D9FpB,EAAYC,YAAW,CACzBgC,KAAM,CACF5B,QAAS,OACT6B,cAAe,MACfC,SAAU,EACVC,OAAQ,QAEZC,OAAQ,CACJhC,QAAS,OACT6B,cAAe,SACfC,SAAU,GAEd3B,WAAY,CACR8B,OAAQ,UA4BDC,EAxBA,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAEPjB,GAF6B,EAAbzB,QAENE,KAQhB,OACI,yBAAKyB,UAAWF,EAAQU,MACpB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,SAASjB,UAAWF,EAAQc,QACzC,kBAAC7B,EAAA,EAAD,CAAYiB,UAAWF,EAAQf,WAAYwB,QAAQ,MAV3C,SAAAQ,GAEhB,MAAoB,MADDA,EAAQG,SAApBC,SACmB,gCAAkC,gBAQKC,CAAYL,IACrE,kBAACM,EAAA,EAAD,CAAQC,QAAM,GACV,kBAAC,EAAeC,SAAhB,MACK,mBARG,SAAAlD,GAAO,MAAI,SAAUA,EAAU,kBAAC,EAAD,CAAWA,QAASA,IAAc,KAQrDmD,CAAf,EAAEnD,gB,4JCzCrBoD,G,mMACiBC,GAAQ,IAEdC,EAETD,EAFFE,QAAWD,IACXE,EACEH,EADFG,QAGF,OADWC,IAAEC,QAAQC,OAAOH,GAASI,MAAMN,O,GANnBO,MAUbC,cAAYV,GCPnBW,EAAuBC,IAAvBD,QAASE,EAAcD,IAAdC,UAEX/D,EAAYC,YAAW,CACzBgC,KAAM,CACFG,OAAQ,QAEZ4B,MAAO,CACHC,MAAO,MACP7B,OAAQ,OAEZ8B,IAAK,CACDxB,SAAU,WACVyB,KAAM,MACNC,OAAQ,MACRC,OAAQ,IACRC,WAAY,WAmELC,GA/DM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYzE,EAAiB,EAAjBA,WAe1BwB,GAdYkD,qBAAW7E,GAAvBE,QAcUE,KAiBhB,OACI,kBAAC0E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAStE,aAAa,SAASmB,UAAWF,EAAQU,MACtE,kBAAC+B,EAAA,EAAD,CAAOjC,UAAW,EAAGN,UAAWF,EAAQyC,OACpC,kBAACa,EAAA,EAAD,CAAKC,GAAG,QAAQC,OAjCf,CAAC,EAAG,GAiC2BC,KAhCjC,EAgC6CC,OAAQT,EAAWS,OAAST,EAAWS,OAAS,MACxF,kBAACnB,EAAA,EAAD,CAAepB,SAAS,WACpB,kBAACqB,EAAD,CAAWmB,SAAO,EAACC,KAAK,iBACpB,kBAACC,EAAA,EAAD,CACIC,YAAY,0EACZC,IAAI,wDAGZ,kBAACzB,EAAD,CAASsB,KAAK,mBAAmBD,SAAS,GACtC,kBAACK,EAAA,EAAD,CAASC,UAAWhB,EAAWiB,SAAW,MAE9C,kBAAC5B,EAAD,CAASsB,KAAK,SAASD,SAAS,GAC5B,kBAACQ,EAAA,EAAD,KAEKlB,EAAWmB,OAAOvC,KAAI,SAACwC,EAAOC,GAAR,OAAkB,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAOnD,SAAU,CAACkD,EAAMI,SAAUJ,EAAMK,YAhCtG,SAAC,GAAoC,IAAnCd,EAAkC,EAAlCA,KAAMe,EAA4B,EAA5BA,SAAUZ,EAAkB,EAAlBA,IAAKa,EAAa,EAAbA,QACvC,OACI,kBAACC,EAAA,EAAD,CAAO9C,QAAS,CAAC+C,SAAS,IACtB,yBAAK5E,UAAU,iBACX,4BAAK0D,GACL,2BAAIgB,GACJ,6BACA,yBAAKG,IAAKJ,EAAUK,IAAI,gBACxB,6BACA,uBAAGC,KAAMlB,EAAKmB,OAAO,UAArB,8BAuBuHC,CAAYd,UAInI,kBAAC,EAAD,CAAetC,QAjDT,CAClBZ,SAAU,UACViE,QAAQ,EACRC,SAAS,EACTC,sBAAsB,MA+Cd,kBAAC3C,EAAA,EAAD,CAAK4C,MAAM,UAAUrF,UAAWF,EAAQ2C,IAAK6C,QA5CrC,SAAAC,GAChBjH,EAAW,MA4CC,kBAACkH,EAAA,EAAD,UClFL,IACXC,YAAa,WACT,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,UAAUC,YAAYC,mBAAmBJ,EAASC,OAG1DI,UAAU,WAAD,4BAAE,WAAOrG,EAAMsB,EAAUgF,EAAYC,GAAnC,iBAAAC,EAAA,sEACgBC,MAAM,eAAD,OAAgBzG,EAAhB,gBAA4BsB,EAASoF,IAArC,gBAAgDpF,EAASqF,IAAzD,iBAAqEL,EAArE,iBAAwFC,IAD7G,cACDK,EADC,gBAEYA,EAASC,OAFrB,cAEDA,EAFC,yBAGAA,GAHA,2CAAF,yDAAC,GAKVC,YAAa,SAAAC,GACT,MAAO,CACHL,IAAKK,EAAenC,SACpB+B,IAAKI,EAAelC,YAG5BmC,aAAc,SAAAC,GACV,OAAc,GAAPA,ICsBAC,G,YAlCX,WAAYnF,GAAQ,IAAD,8BACf,4CAAMA,KAQVoF,kBATmB,sBASC,8CAAAX,EAAA,sEAEKY,GAAItB,cAFT,cAEZvE,EAFY,OAGX8F,EAAU9F,EAAV8F,OACD/F,EAAW8F,GAAIN,YAAYO,GAJf,EAKoB,EAAKtF,MAAMrD,QAA1CsB,EALW,EAKXA,KAAME,EALK,EAKLA,WAAYD,EALP,EAKOA,UACnBqH,EAAWF,GAAIJ,aAAa/G,GANhB,SAOGmH,GAAIf,UAAUrG,EAAMsB,EAAUpB,EAAYoH,GAP7C,OAOZ/C,EAPY,OAUZV,EAAS1B,IAAEkC,QAAQE,EAAOF,SAASkD,YACvChD,EAAOV,OAASA,EAGhB,EAAK2D,SAAS,CACVpE,WAAYmB,IAfA,4CAPhB,EAAKkD,MAAQ,CACTrE,WAAY,CACRmB,OAAQ,GACRF,QAAS,KALF,E,sEA4Bf,OACI,kBAAC,GAAD,CAAc1F,WAAY+I,KAAK3F,MAAMpD,WAAYyE,WAAYsE,KAAKD,MAAMrE,iB,GA9B3DuE,IAAMC,W,UCIzBhJ,GAAYC,YAAW,CACzBgC,KAAM,CACF5B,QAAS,OACT6B,cAAe,MACfC,SAAU,EACVC,OAAQ,QAEZ6G,aAAc,CACVvG,SAAU,QACV0B,OAAQ,EACR/D,QAAS,OACT6B,cAAe,MACfC,SAAU,GAEd3B,WAAY,CACR8B,OAAQ,UAgBD4G,GAZA,SAAA/F,GACX,IAAM5B,EAAUvB,KAEhB,OACI,yBAAKyB,UAAWF,EAAQU,MACpB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,WAAWjB,UAAWF,EAAQ0H,cAC3C,kBAACzI,EAAA,EAAD,CAAYiB,UAAWF,EAAQf,WAAYwB,QAAQ,MAAnD,gBAAqE,kBAACmH,GAAA,EAAD,CAAMrC,MAAM,UAAUN,KAAK,2BAA2BC,OAAO,UAA7D,iBCbtE2C,GAfC,SAAC,GAAiB,IAAf5G,EAAc,EAAdA,QAEf,OACI,oCACI,kBAAC,EAAD,CAAQA,QAASA,IACjB,kBAAC,EAAeQ,SAAhB,MACK,gBAAGlD,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,MAA6B,SAAUD,EACpC,kBAAC,GAAD,CAAYC,WAAYA,EAAYD,QAASA,EAAS0C,QAASA,IAC/DA,EAAQ6G,KAAK,QAErB,kBAAC,GAAD,Q,6GCZNrJ,GAAYC,YAAW,CACzBgC,KAAM,CACFqH,UAAW,SACXjJ,QAAS,OACT6B,cAAe,SACf5B,aAAc,UAElB0D,MAAO,CACHC,MAAO,MACPvD,QAAS,MACT4B,OAAQ,OAEZiH,KAAM,CACFjH,OAAQ,SAEZkH,KAAM,CACFvF,MAAO,MACPqF,UAAW,UACXG,WAAY,GAEhBC,UAAW,CACPzF,MAAO,QAEX0F,YAAa,CACT1F,MAAO,QAEX2F,OAAQ,CACJ3F,MAAO,QACP4F,SAAU,QACVvH,OAAQ,MACR5B,QAAS,SA8EFoJ,GA1EF,SAAC,GAA2E,IAA1E1I,EAAyE,EAAzEA,KAAME,EAAmE,EAAnEA,WAAYD,EAAuD,EAAvDA,UAAW0I,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAC9D1I,EAAUvB,KAEhB,OACI,kBAACkK,GAAA,EAAD,CAAWL,SAAS,KAAKpI,UAAWF,EAAQU,MACxC,kBAACzB,EAAA,EAAD,CAAYwB,QAAQ,KAAKP,UAAWF,EAAQgI,MAA5C,6CACA,kBAAC7E,EAAA,EAAD,CAAMC,WAAS,EAACrE,aAAa,SAASsE,QAAQ,UAC1C,kBAACZ,EAAA,EAAD,CAAOjC,UAAW,EAAGN,UAAWF,EAAQyC,OACpC,kBAACxD,EAAA,EAAD,CAAYwB,QAAQ,IAAIP,UAAWF,EAAQiI,MAA3C,wXAMR,kBAAC9E,EAAA,EAAD,CAAMC,WAAS,EAACrE,aAAa,SAASsE,QAAQ,UAC1C,kBAACZ,EAAA,EAAD,CAAOjC,UAAW,EAAGN,UAAWF,EAAQyC,OACpC,kBAACmG,GAAA,EAAD,CAAaC,UAAU,WAAW3I,UAAWF,EAAQoI,aACjD,kBAACU,GAAA,EAAD,CAAWD,UAAU,UAArB,2CACA,kBAACE,GAAA,EAAD,CAAY7I,UAAWF,EAAQgJ,WAAYC,aAAW,aAAarF,KAAK,OAAOsF,MAAOrJ,EAAMsJ,SAAUX,GAClG,kBAACY,GAAA,EAAD,CAAkBF,MAAM,OAAOjH,QAAS,kBAACoH,GAAA,EAAD,MAAUC,MAAM,kBACxD,kBAACF,GAAA,EAAD,CAAkBF,MAAM,MAAMjH,QAAS,kBAACoH,GAAA,EAAD,MAAUC,MAAM,cACvD,kBAACF,GAAA,EAAD,CAAkBF,MAAM,OAAOjH,QAAS,kBAACoH,GAAA,EAAD,MAAUC,MAAM,aAKxE,kBAACnG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACZ,EAAA,EAAD,CAAOjC,UAAW,EAAGN,UAAWF,EAAQyC,OACpC,kBAACmG,GAAA,EAAD,CAAaC,UAAU,WAAW3I,UAAWF,EAAQoI,aACjD,kBAACmB,GAAA,EAAD,CAAYC,QAAQ,UAApB,8BACA,kBAACC,GAAA,EAAD,CACIP,MAAOnJ,EACPoJ,SAAUX,EACVkB,WAAY,CACRnG,GAAI,gBACJK,KAAM,eAGV,4BAAQsF,MAAM,IAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,YAKhB,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACZ,EAAA,EAAD,CAAOjC,UAAW,EAAGN,UAAWF,EAAQyC,OACpC,kBAAC0F,GAAA,EAAD,CACI5E,GAAG,SACH+F,MAAM,8CACN1F,KAAK,YACLsF,MAAOpJ,EAAY,EAAIA,EAAY,GACnC6J,QAAO7J,EAAY,GACnBqJ,SAAUX,EACVnJ,KAAK,SACLa,UAAWF,EAAQmI,UACnByB,gBAAiB,CACbC,QAAQ,GAEZ9I,OAAO,aAInB,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACpB,kBAACyG,GAAA,EAAD,CAAQrJ,QAAQ,YAAYP,UAAWF,EAAQqI,OAAQ0B,SAAUrB,EAAYlD,QAASiD,GACjFC,EAAa,kCAAoC,uCC9CvDsB,G,YAnDX,WAAYpI,GAAQ,IAAD,8BACf,4CAAMA,KASV4G,aAAe,SAAA/C,GAAS,MAEIA,EAAMP,OAAtBtB,EAFY,EAEZA,KAAMsF,EAFM,EAENA,MACd,EAAK7B,UAAS,SAAA4C,GAAc,IAAD,EAClBpK,EAA+BoK,EAA/BpK,KAAME,EAAyBkK,EAAzBlK,WAAYD,EAAamK,EAAbnK,UAOvB,OAAO,EAAP,kBACK8D,EAAOsF,GADZ,4BANuB,SAACrJ,EAAME,EAAYD,GACtC,MAAa,KAATD,GAA8B,KAAfE,GAA6C,KAAxBmK,SAASpK,GAOrCqK,CAAetK,EAAME,EAAYD,IAFjD,MArBW,EA2BnB2I,aA3BmB,uCA2BJ,WAAMhD,GAAN,eAAAY,EAAA,sDAEXZ,EAAM2E,iBACN,EAAKxI,MAAMpD,WAAW,EAAK8I,OAEpBrG,EAAW,EAAKW,MAAhBX,QACPoJ,QAAQC,IAAIrJ,GACZA,EAAQ6G,KAAK,QAPF,2CA3BI,wDAoCnByC,OAAS,WACL,OACI,kBAAC,GAAD,CACI1K,KAAM,EAAKyH,MAAMzH,KACjBE,WAAY,EAAKuH,MAAMvH,WACvBD,UAAW,EAAKwH,MAAMxH,UACtB0K,aAAc,EAAKlD,MAAMkD,aACzBhC,aAAc,EAAKA,aACnBC,aAAc,EAAKA,aACnBC,WAAY,EAAKpB,MAAMoB,cA3C/B,EAAKpB,MAAQ,CACTzH,KAAM,GACNE,WAAY,GACZD,UAAW,EACX0K,aAAc,GACd9B,YAAY,GAPD,E,2BADGlB,IAAMC,WCYjBgD,GAZG,SAAC,GAAe,IAAdxJ,EAAa,EAAbA,QAChB,OACI,oCACI,kBAAC,EAAD,CAAQA,QAASA,IACjB,kBAAC,EAAeQ,SAAhB,MACK,gBAAGjD,EAAH,EAAGA,WAAH,OAAoB,kBAAC,GAAD,CAAaA,WAAYA,EAAYyC,QAASA,OAEvE,kBAAC,GAAD,QCNNxC,GAAYC,YAAW,CACzBgC,KAAM,CACF5B,QAAS,OACT+B,OAAQ,OACRjC,eAAgB,SAChBM,WAAY,UAEhBuD,MAAO,CACHiI,UAAW,MACXhI,MAAO,OACP7B,OAAQ,OACR0E,MAAO,MACPzG,QAAS,OACT6B,cAAe,SACf/B,eAAgB,SAChBM,WAAY,YAIdyL,GAAQnD,IAAMoD,YAAW,SAAChJ,EAAOiJ,GAAR,OAAgB,kBAAC,IAAD,eAAYA,IAAKA,GAASjJ,OAkB1D6I,GAhBG,SAAC,GAAe,IAAdxJ,EAAa,EAAbA,QACVjB,EAAUvB,KAChB,OACI,oCACI,kBAAC,EAAD,CAAQwC,QAASA,IACjB,kBAAC0H,GAAA,EAAD,CAAWzI,UAAWF,EAAQU,MAC1B,kBAAC+B,EAAA,EAAD,CAAOvC,UAAWF,EAAQyC,OACtB,kBAACxD,EAAA,EAAD,CAAYwB,QAAQ,MAApB,0CACA,kBAACmH,GAAA,EAAD,CAAMkD,GAAG,IAAIjC,UAAW8B,IAAxB,eAGR,kBAAC,GAAD,QCGGI,G,YAlCX,WAAYnJ,GAAQ,IAAD,8BACf,4CAAMA,KAQVpD,WAAa,SAAAD,GACT,EAAK8I,SAAS,CACV9I,QAASA,KAXE,EAcnByM,YAAc,SAAA9D,GACV,EAAKG,SAAS,CACVjG,SAAU8F,KAdd,EAAKI,MAAQ,CACTlG,SAAU,GACV4J,YAAa,EAAKA,YAClBzM,QAAS,GACTC,WAAY,EAAKA,YANN,E,sEAoBf,OACI,kBAAC,EAAeyM,SAAhB,CAAyB/B,MAAO,CAAC3K,QAASgJ,KAAKD,MAAM/I,QAASC,WAAY+I,KAAKD,MAAM9I,aACjF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0M,OAAK,EAACC,KAAK,IAAItC,UAAW4B,KACjC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,OAAOtC,UAAWhB,KACpC,kBAAC,IAAD,CAAOsD,KAAK,IAAItC,UAAWuC,Y,GA3BtB5D,IAAMC,WCIpB4D,I,cANH,WACV,OACE,kBAAC,GAAD,QCKgBC,QACW,cAA7BC,OAAOnK,SAASoK,UAEe,UAA7BD,OAAOnK,SAASoK,UAEhBD,OAAOnK,SAASoK,SAASC,MACvB,2DCZNC,IAASnB,OAAO,kBAAC,GAAD,MAASoB,SAASC,eAAe,SD2H3C,kBAAmB7F,WACrBA,UAAU8F,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.4495ebc6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst ChoicesContext = createContext({\n    choices: {},\n    setChoices: () => {}\n});\n\nexport default ChoicesContext;","import React from 'react';\n// material UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    DirectionsBikeTwoTone,\n    DirectionsWalkTwoTone,\n    DriveEtaTwoTone,\n    DirectionsRunTwoTone\n} from '@material-ui/icons/'\nimport {\n    Card,\n    Typography,\n    GridList,\n    GridListTile\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    GridList: {\n        justifyContent: \"space-between\"\n    },\n    Tile: {\n        display: \"flex\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n    },\n    TileCard: {\n        // width: \"70%\"\n    },\n    Typography: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"0 5px\"\n    }\n});\n\nconst selectIcon = type => {\n    switch (type) {\n        case \"drive\":\n            return <DriveEtaTwoTone fontSize=\"large\" htmlColor=\"green\"/>\n        case \"bike\":\n            return <DirectionsBikeTwoTone fontSize=\"large\" htmlColor=\"green\"/>\n        case \"walk\":\n            return <DirectionsWalkTwoTone fontSize=\"large\" htmlColor=\"green\"/>\n        case \"hike\":\n            return <DirectionsWalkTwoTone fontSize=\"large\" htmlColor=\"green\"/>\n        case \"run\":\n            return <DirectionsRunTwoTone fontSize=\"large\" htmlColor=\"green\"/>\n        default:\n            return null\n    }\n}\n\nconst CardGroup = ({choices}) => {\n    let {mode, timeLimit, travelType} = choices;\n    let classes = useStyles();\n    return (\n        <GridList cellHeight=\"auto\" className={classes.GridList} cols={3} style={{marginBottom: \"5px\"}}>\n            <GridListTile cols={1} className={classes.Tile}>\n                <Card elevation={2} className={classes.TileCard}>\n                    <Typography variant=\"h6\" className={classes.Typography}>Travel Method: {selectIcon(travelType)}</Typography>\n                </Card>\n            </GridListTile>\n            <GridListTile cols={1} className={classes.Tile}>\n                <Card elevation={2} className={classes.TileCard}>\n                    <Typography variant=\"h6\" className={classes.Typography}>Time Limit: {timeLimit} minutes</Typography>\n                </Card>\n            </GridListTile>\n            <GridListTile cols={1} className={classes.Tile}>\n                <Card elevation={2} className={classes.TileCard}>\n                    <Typography variant=\"h6\" className={classes.Typography}>Trail Type: {selectIcon(mode)}</Typography>\n                </Card>\n            </GridListTile>\n        </GridList>\n    );\n}\n\nexport default CardGroup;","import React from 'react';\n// material UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    AppBar,\n    Typography,\n    Hidden\n} from '@material-ui/core';\n\nimport ChoicesContext from '../context/ChoicesContext';\nimport CardGroup from './CardGroup';\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexGrow: 1,\n        height: \"10vh\"\n    },\n    appBar: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1\n    },\n    Typography: {\n        margin: \"auto\"\n    }\n});\n\nconst NavBar = ({history, choices}) => {\n\n    const classes = useStyles();\n    const displayText = history => {\n        const {pathname} = history.location;\n        return pathname === \"/\" ? \"Welcome to Time for Training!\" : \"Get after it!\";\n    }\n\n    const renderCardGroup = choices => \"mode\" in choices ? <CardGroup choices={choices} /> : null;\n\n    return (\n        <div className={classes.root} >\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Typography className={classes.Typography} variant=\"h6\">{displayText(history)}</Typography>\n                <Hidden mdDown >\n                    <ChoicesContext.Consumer>\n                        {({choices}) => renderCardGroup(choices)}\n                    </ChoicesContext.Consumer>\n                </Hidden>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar;","import L from 'leaflet';\nimport { withLeaflet, MapControl } from 'react-leaflet';\nimport 'leaflet.locatecontrol';\n\nclass LocateControl extends MapControl {\n  createLeafletElement(props) {\n    const {\n      leaflet: { map },\n      options\n    } = props;\n    const lc = L.control.locate(options).addTo(map);\n    return lc;\n  }\n}\nexport default withLeaflet(LocateControl);","import React, { useContext } from 'react';\nimport { Grid, Paper, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Home} from '@material-ui/icons';\nimport { Map, LayersControl, LayerGroup, Marker, TileLayer, Polygon, Popup } from 'react-leaflet';\nimport LocateControl from './LocateControl';\nimport ChoicesContext from '../context/ChoicesContext';\nconst { Overlay, BaseLayer } = LayersControl;\n\nconst useStyles = makeStyles({\n    root: {\n        height: \"80vh\"\n    },\n    Paper: {\n        width: \"80%\",\n        height: \"80%\"\n    },\n    Fab: {\n        position: \"absolute\",\n        left: \"10%\",\n        bottom: \"15%\",\n        zIndex: 1000,\n        marginLeft: \"-32px\"\n    }\n});\n\nconst MapComponent = ({ trailsInfo, setChoices }) => {\n    let { choices } = useContext(ChoicesContext);\n    let center = [0, 0];\n    let zoom = 3;\n    const locateOptions = {\n        position: 'topleft',\n        follow: false,\n        setView: false,\n        keepCurrentZoomLevel: true,\n    }\n\n    const handleClick = event => {\n        setChoices({}); // setting choices to an empty object triggers a history.push(\"/\"); in MapPage component!\n    }\n\n    const classes = useStyles();\n\n    const renderPopup = ({name, imgSmall, url, summary}) => {\n        return (\n            <Popup options={{autoPan: true}}>\n                <div className=\"popup-content\">\n                    <h3>{name}</h3>\n                    <p>{summary}</p>\n                    <br/>\n                    <img src={imgSmall} alt='trail image'/>\n                    <br/>\n                    <a href={url} target='_blank'>here's some more info...</a>\n                </div>\n            </Popup>\n        )\n    }\n\n    return (\n        <Grid container justify=\"center\" alignContent=\"center\" className={classes.root}>\n            <Paper elevation={2} className={classes.Paper}>\n                <Map id=\"myMap\" center={center} zoom={zoom} bounds={trailsInfo.bounds ? trailsInfo.bounds : null}>\n                    <LayersControl position=\"topleft\">\n                        <BaseLayer checked name=\"openstreetmap\">\n                            <TileLayer\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                        </BaseLayer>\n                        <Overlay name=\"distance polygon\" checked={true}>\n                            <Polygon positions={trailsInfo.polygon || []} />\n                        </Overlay>\n                        <Overlay name=\"trails\" checked={true}>\n                            <LayerGroup>\n                                {/* mapping the trails markers */}\n                                {trailsInfo.trails.map((trail, index) => <Marker key={index} position={[trail.latitude, trail.longitude]}>{renderPopup(trail)}</Marker>)}\n                            </LayerGroup>\n                        </Overlay>\n                    </LayersControl>\n                    <LocateControl options={locateOptions} />\n                </Map>\n                <Fab color=\"primary\" className={classes.Fab} onClick={handleClick}>\n                    <Home />\n                </Fab>\n            </Paper>\n        </Grid>\n    );\n}\n\nexport default MapComponent;","export default {\n    getLocation: () => {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(resolve, reject);\n        });\n    },\n    getTrails: async (mode, position, travelMode, timeLimitation) => {\n        const response = await fetch(`/api/trails/${mode}?lat=${position.lat}&lng=${position.lng}&mode=${travelMode}&time=${timeLimitation}`);\n        const json = await response.json();\n        return json;\n    },\n    getPosition: locationObject => {\n        return {\n            lat: locationObject.latitude,\n            lng: locationObject.longitude\n        }\n    },\n    getTimeLimit: time => {\n        return time * 60;\n    }\n}","import React from 'react';\nimport L from 'leaflet';\nimport MapComponent from '../components/MapComponent';\nimport API from '../utils/API';\n\nclass MapWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            trailsInfo: {\n                trails: [],\n                polygon: []\n            }\n        }\n    }\n    componentDidMount = async () => {\n        // hit api with location information\n        let location = await API.getLocation();\n        let {coords} = location;\n        let position = API.getPosition(coords);\n        let {mode, travelType, timeLimit} = this.props.choices;\n        let realTime = API.getTimeLimit(timeLimit);\n        let trails = await API.getTrails(mode, position, travelType, realTime);\n        \n        // create a bounds object\n        let bounds = L.polygon(trails.polygon).getBounds();\n        trails.bounds = bounds;\n        \n        // set state with trails\n        this.setState({\n            trailsInfo: trails\n        })\n    }\n    render() {\n        return (\n            <MapComponent setChoices={this.props.setChoices} trailsInfo={this.state.trailsInfo} />\n        );\n    }\n}\n\nexport default MapWrapper;","import React, { useState } from 'react';\n// material UI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    AppBar,\n    Typography,\n    Link\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexGrow: 1,\n        height: \"10vh\"\n    },\n    appBarFooter: {\n        position: \"fixed\",\n        bottom: 0,\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexGrow: 1\n    },\n    Typography: {\n        margin: \"auto\"\n    }\n})\n\nconst Footer = props => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"relative\" className={classes.appBarFooter}>\n                <Typography className={classes.Typography} variant=\"h6\">Andy Hardy | <Link color=\"inherit\" href=\"https://www.ahardy42.com\" target=\"_blank\">Portfolio</Link></Typography>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport NavBar from '../components/NavBar';\nimport MapWrapper from '../containers/MapWrapper';\nimport Footer from '../components/Footer';\nimport ChoicesContext from '../context/ChoicesContext';\n\nconst MapPage = ({ history }) => {\n\n    return (\n        <>\n            <NavBar history={history} />\n            <ChoicesContext.Consumer>\n                {({ choices, setChoices }) => \"mode\" in choices ? (\n                    <MapWrapper setChoices={setChoices} choices={choices} history={history} />\n                ) : history.push(\"/\")}\n            </ChoicesContext.Consumer>\n            <Footer />\n        </>\n    )\n}\n\nexport default MapPage;","import React from 'react';\nimport { FormControl, InputLabel, Select, Button, RadioGroup, FormControlLabel, Radio, TextField, Paper, Typography, Container, Grid, FormLabel} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignContent: \"center\"\n    },\n    Paper: {\n        width: \"80%\",\n        padding: \"1em\",\n        margin: \"1em\"\n    },\n    text: {\n        margin: \"1em 0\"\n    },\n    info: {\n        width: \"80%\",\n        textAlign: \"justify\",\n        lineHeight: 2\n    },\n    TextField: {\n        width: \"100%\"\n    },\n    formControl: {\n        width: \"100%\"\n    },\n    button: {\n        width: \"200px\",\n        maxWidth: \"200px\",\n        margin: \"1em\",\n        padding: \"1em\"\n    }\n})\n\nconst Form = ({mode, travelType, timeLimit, handleChange, handleSubmit, isDisabled}) => {\n    const classes = useStyles();\n\n    return(\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Typography variant=\"h3\" className={classes.text}>What Trails are within your reach today?!</Typography>\n            <Grid container alignContent=\"center\" justify=\"center\">\n                <Paper elevation={2} className={classes.Paper}>\n                    <Typography variant=\"p\" className={classes.info}>\n                        This app uses your location, and some information you provide below (what type of trails you're looking for, and how much time you have to get to the trailhead), to display a map of \n                        places you can go within that time limit, and, where there are some cool trails nearby.  When you click the button below you will be taken to a map page to help you navigate to the trails.\n                    </Typography>\n                </Paper>\n            </Grid>\n            <Grid container alignContent=\"center\" justify=\"center\">\n                <Paper elevation={2} className={classes.Paper}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">What Type of Trail are you Looking For?</FormLabel>\n                        <RadioGroup className={classes.radioGroup} aria-label=\"activities\" name=\"mode\" value={mode} onChange={handleChange}>\n                            <FormControlLabel value=\"bike\" control={<Radio/>} label=\"Mountain Bike\" />\n                            <FormControlLabel value=\"run\" control={<Radio/>} label=\"Trail Run\" />\n                            <FormControlLabel value=\"hike\" control={<Radio/>} label=\"Hike\" />\n                        </RadioGroup>\n                    </FormControl>\n                </Paper>\n            </Grid>\n            <Grid container justify=\"center\">\n                <Paper elevation={2} className={classes.Paper}>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <InputLabel htmlFor=\"select\">How Are You Getting There?</InputLabel>\n                        <Select\n                            value={travelType}\n                            onChange={handleChange}\n                            inputProps={{\n                                id: 'travel-select',\n                                name: 'travelType'\n                            }}\n                        >\n                            <option value=\"\">Select</option>\n                            <option value=\"drive\">Drive</option>\n                            <option value=\"bike\">Bike</option>\n                            <option value=\"walk\">Walk</option>\n                        </Select>\n                    </FormControl>\n                </Paper>\n            </Grid>\n            <Grid container justify=\"center\">\n                <Paper elevation={2} className={classes.Paper}>\n                    <TextField\n                        id=\"number\"\n                        label=\"How much travel time do you have (minutes)?\"\n                        name=\"timeLimit\"\n                        value={timeLimit > 0 ? timeLimit : \"\"}\n                        error={timeLimit > 0 ? false : true}\n                        onChange={handleChange}\n                        type=\"number\"\n                        className={classes.TextField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        margin=\"normal\"\n                    />\n                </Paper>\n            </Grid>\n            <Grid container justify=\"center\">\n                <Button variant=\"contained\" className={classes.button} disabled={isDisabled} onClick={handleSubmit}>\n                    {isDisabled ? \"Please Fill Out All Form Fields\" : \"Let's Find Some Trails Near You!\"}\n                </Button>\n            </Grid>\n\n        </Container>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport Form from '../components/Form';\nimport API from '../utils/API';\n\n// stateful wrapper for the form elements\n\nclass FormWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"\",\n            travelType: \"\",\n            timeLimit: 0,\n            errorMessage: \"\",\n            isDisabled: true\n        }\n    }\n    handleChange = event => {\n        // handler for travel type selector, and time limit input\n        const { name, value } = event.target;\n        this.setState(prevState => {\n            let {mode, travelType, timeLimit} = prevState;\n            const returnDisabled = (mode, travelType, timeLimit) => {\n                if (mode !== \"\" && travelType !== \"\" && parseInt(timeLimit) !== \"\") {\n                    return false;\n                }\n                return true;\n            }\n            return {\n                [name]: value,\n                isDisabled: returnDisabled(mode, travelType, timeLimit)\n            }\n        });\n    }\n    handleSubmit = async event => {\n        // handler for clicking the submit button \n        event.preventDefault();\n        this.props.setChoices(this.state);\n        // go to the map page\n        const {history} = this.props;\n        console.log(history);\n        history.push('/map');\n    }\n    render = () => {\n        return (\n            <Form\n                mode={this.state.mode}\n                travelType={this.state.travelType}\n                timeLimit={this.state.timeLimit}\n                errorMessage={this.state.errorMessage}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                isDisabled={this.state.isDisabled}\n            />\n        );\n    }\n}\n\nexport default FormWrapper;","import React from 'react';\nimport NavBar from '../components/NavBar';\nimport FormWrapper from '../containers/FormWrapper';\nimport Footer from '../components/Footer';\nimport ChoicesContext from '../context/ChoicesContext';\n\nconst EntryPage = ({history}) => {\n    return (\n        <>\n            <NavBar history={history}/>\n            <ChoicesContext.Consumer>\n                {({ setChoices }) => <FormWrapper setChoices={setChoices} history={history}/>}\n            </ChoicesContext.Consumer>\n            <Footer />\n        </>\n    );\n}\n\nexport default EntryPage;","import React from 'react';\nimport {Container, Paper, Typography, Link} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport NavBar from '../components/NavBar';\nimport Footer from '../components/Footer';\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        height: \"80vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    Paper: {\n        marginTop: \"2em\",\n        width: '100%',\n        height: \"100%\",\n        color: 'red',\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n});\n\nconst Link1 = React.forwardRef((props, ref) => <RouterLink ref={ref} {...props} />);\n\nconst EntryPage = ({history}) => {\n    const classes = useStyles();\n    return(\n        <>\n            <NavBar history={history}/>\n            <Container className={classes.root}>\n                <Paper className={classes.Paper}>\n                    <Typography variant=\"h3\">Sorry, you have wandered off the path!</Typography>\n                    <Link to=\"/\" component={Link1}>Head Home</Link>\n                </Paper>\n            </Container>\n            <Footer />\n        </>\n    )\n}\n\nexport default EntryPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ChoicesContext from '../context/ChoicesContext';\nimport MapPage from '../pages/MapPage';\nimport EntryPage from '../pages/EntryPage';\nimport NoPage from '../pages/NoPage';\n\nclass RouteComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n            setLocation: this.setLocation,\n            choices: {},\n            setChoices: this.setChoices\n        }\n    }\n    setChoices = choices => {\n        this.setState({\n            choices: choices\n        });\n    }\n    setLocation = coords => {\n        this.setState({\n            location: coords\n        })\n    }\n    render() {\n        return (\n            <ChoicesContext.Provider value={{choices: this.state.choices, setChoices: this.state.setChoices}}>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={EntryPage} />\n                        <Route exact path=\"/map\" component={MapPage}/>\n                        <Route path=\"*\" component={NoPage} />\n                    </Switch>\n                </Router>\n            </ChoicesContext.Provider>\n        );\n    }\n}\n\nexport default RouteComponent;","import React from 'react';\nimport Routes from './routes';\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.css';\nimport './App.sass';\n\nconst App = () => {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}